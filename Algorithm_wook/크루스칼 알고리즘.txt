Kruskal 알고리즘
탐욕적인 방법을 이용하여 모든 정점을 최소 비용으로 연결
 - 최소 비용의 간선으로 구성된다
 - 사이클을 포함하지 않도록 한다

[동작]
 1. 그래프의 간선들을 가중치의 오름차순으로 정렬
 2. 정렬된 간선 리스트에서 순서대로 사이클을 형성하지 않는 간선을 선택
 3. 해당 간선을 현재의 MST의 집합에 추가

 주의!
  - 사이클 생성 여부를 확인하는 방법 : 'union-find 알고리즘' 이용

[시간 복잡도]
 1. union-find 알고리즘을 이용하면 kruskal 알고리즘의 시간 복잡도는 간선들을 정렬하는 시간에 좌우된다.
 2. 간선 e개일 때, 퀵 정렬을 이용하면 O(eloge)
 3. prim 알고리즘 : O(n^2)
   - 그래프 내에 적은 숫자의 간선만을 가지는 '희소 그래프'의 경우 Kruskal 이 적합
   - 그래프에 간선이 많이 존재하는 '밀집 그래프'의 경우 prim 이 적합